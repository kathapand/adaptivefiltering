name: CI

on:
  # We run CI on pushes to the main branch
  push:
    branches:
      - main
  # and on all pull requests to the main branch
  pull_request:
    branches:
      - main
  # as well as upon manual triggers through the 'Actions' tab of the Github UI
  workflow_dispatch:

jobs:
  build-and-test:
    name: Testing on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - windows-2019

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        lfs: true

    - name: Set up Conda with Python ${{ matrix.python-version }}
      uses: s-weigand/setup-conda@v1

    - name: SSH setup
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: |
          ${{ secrets.SSH_KEY }}

    - name: Add known host
      run: |
        echo "ssc-jupyter.iwr.uni-heidelberg.de ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJlEBwr7Qv0expAPxukZOmIUcVI1erVPya+GkzCd+iQK" >> ~/.ssh/known_hosts

    - name: Install conda dependencies
      run: |
        conda env update -n base --file environment.yml

    - name: Install development dependencies
      run: |
        python -m pip install -r requirements-dev.txt

    - name: Install OPALS (Linux)
      if: runner.os == 'Linux'
      working-directory: ${{ runner.workspace }}
      run: |
        scp -P 22222 ssc-github@ssc-jupyter.iwr.uni-heidelberg.de:/home/ssc-github/opals_nightly_linux64.tar.gz ${{ runner.workspace }}
        tar xzvf ${{ runner.workspace }}/opals_nightly_linux64.tar.gz
        echo "OPALS_DIR=${{ runner.workspace }}/opals_2.3.2" >> $GITHUB_ENV

    - name: Install OPALS (Windows)
      if: runner.os == 'Windows'
      working-directory: ${{ runner.workspace }}
      run: |
        c://progra~1//git//usr//bin//scp.exe -P 22222 ssc-github@ssc-jupyter.iwr.uni-heidelberg.de:/home/ssc-github/opals_nightly_win64-setup.exe ${{ runner.workspace }}
        ${{ runner.workspace }}\opals_nightly_win64-setup.exe /D=${{ runner.workspace }}
        echo "OPALS_DIR=${{ runner.workspace }}" >> $GITHUB_ENV

    - name: Install the adaptivefiltering Python package
      run: |
        python -m pip install .

    - name: Run Python tests
      run: |
        python -m pytest --nbval-lax

  coverage:
    name: Coverage Testing
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        lfs: true

    - name: SSH setup
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: |
          ${{ secrets.SSH_KEY }}

    - name: Add known host
      run: |
        echo "ssc-jupyter.iwr.uni-heidelberg.de ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJlEBwr7Qv0expAPxukZOmIUcVI1erVPya+GkzCd+iQK" >> ~/.ssh/known_hosts

    - name: Set up Conda with Python ${{ matrix.python-version }}
      uses: s-weigand/setup-conda@v1

    - name: Install conda dependencies
      run: |
        conda env update -n base --file environment.yml

    - name: Install OPALS (Linux)
      if: runner.os == 'Linux'
      working-directory: ${{ runner.workspace }}
      run: |
        scp -P 22222 ssc-github@ssc-jupyter.iwr.uni-heidelberg.de:/home/ssc-github/opals_nightly_linux64.tar.gz ${{ runner.workspace }}
        tar xzvf ${{ runner.workspace }}/opals_nightly_linux64.tar.gz
        echo "OPALS_DIR=${{ runner.workspace }}/opals_2.3.2" >> $GITHUB_ENV

    - name: Install development dependencies
      run: |
        python -m pip install -r requirements-dev.txt

    - name: Run Python tests
      run: |
        python -m pytest --cov=./adaptivefiltering --cov-report=xml

    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
        files: ./coverage.xml
