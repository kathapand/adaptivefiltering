{
  "anyOf": [
    {
      "additionalProperties": false,
      "properties": {
        "attribute": {
          "default": "z",
          "description": "Valid attributes are either coordinates (x, y, z) or additional infos like Amplitude, EchoWidth etc.)",
          "title": "attribute from which the features shall be derived",
          "type": "string"
        },
        "cellSize": {
          "default": [
            "10",
            "10"
          ],
          "description": "Size of the rectangular grid cell in x- and y-direction. If only one value is passed, quadratic cells are used.",
          "items": {
            "type": "number"
          },
          "title": "cellwidth x/y",
          "type": "array"
        },
        "feature": {
          "description": "One or more feature(s) of the set [min,max,diff,nmin:n,nmax:n,mean,median,sum,variance,rms,pdens,pcount,quantile:p,minority,majority,entropy] which shall be derived from the attribute. For features nmin:n and nmax:n, n (>0) and for feature quantile p ([0,1]) must be specified",
          "items": {
            "type": "string"
          },
          "title": "Feature(s) for which the raster model(s) (or opals data manager(s)) shall be derived",
          "type": "array"
        },
        "filter": {
          "description": "Text string describing a (tree of) filter(s) using the WKT filter syntax.",
          "title": "Modify the input using a (tree of) filter(s)",
          "type": "string"
        },
        "inFile": {
          "description": "The path(s) to the OPALS data manager(s) whose point data are used to derive the raster model(s) (or output OPALS data manager(s)). In case multiple ODMs are specified, the data are queried from all (potentially overlapping) ODMs.",
          "items": {
            "type": "string"
          },
          "title": "input data manager file name(s)",
          "type": "array"
        },
        "limit": {
          "description": "If no user defined limits are specified or -limit is even skipped, the OPALS Data Manager (ODM) extents are used. Rounding is enabled by default in case the limits are derived from the ODM and can be enforced for user defined limits (keyword: round).",
          "title": "2D clipping window",
          "type": "string"
        },
        "multiBand": {
          "default": 0,
          "description": "When using multiband grid features  will be stored in multiple bands instead of multiple files.Features will be saved in the same order as user input.For example if -feature sigma0 slope then Band1=sigma0 and Band2=slope",
          "title": "if multiband set to true then multiple bands will be used instead of multiple files.",
          "type": "boolean"
        },
        "noData": {
          "default": "9999",
          "description": "Value representing an undefined value in the output raster model.",
          "title": "Nodata value",
          "type": "number"
        },
        "oFormat": {
          "description": "Use GDAL driver names like GTiff, AAIGrid, USGSDEM, SCOP... or ODM. Estimation rule: the output format is estimated based on the extension of the output file (*.tif->GTiff, *.dem->USGSDEM, *.dtm->SCOP..., *.odm->ODM). ",
          "title": "grid file format [GTiff,AAIGrid,USGSDEM,SCOP...] or opals data manager format [ODM]",
          "type": "string"
        },
        "outFile": {
          "description": "Path(s) of the output raster file(s) in GDAL supported format (or output opals data managers) Estimation rule: estimated from inFile, attribute, feature and oFormat in the current directory; in case of one given outFile but several features, the actual output files are estimated from outFile, feature, oFormat.",
          "items": {
            "type": "string"
          },
          "title": "output raster file name(s) (or output OPALS data manager(s))",
          "type": "array"
        },
        "type": {
          "const": "Cell",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "Cell Module (OPALS)",
      "type": "object"
    },
    {
      "additionalProperties": false,
      "properties": {
        "attribute": {
          "default": "z",
          "description": "Attribute examples: z(default), Amplitude, EchoWidth, etc.",
          "title": "attribute for which a grid model shall be derived",
          "type": "string"
        },
        "extrapolationCheck": {
          "default": 1,
          "description": "Unfavorable point distributions can lead to extrapolations, where the interpolated value clearly exceeds the local data values. Using the local data range extended by a buffer factory, such extrapolation are detected and rejected if this option is enabled.",
          "title": "avoid extrapolation flag",
          "type": "boolean"
        },
        "feature": {
          "description": "If one or more features are specified, additional grid models in the same format and structure as the basic surface model are derived. Please note that if more than one output file is specified, the number of output file names must match the number of specified features: nr. outFile = nr. feat. + 1 ",
          "enum": [
            "sigmaz",
            "sigma0",
            "pdens",
            "pcount",
            "excentricity",
            "slope",
            "slpDeg",
            "slpRad",
            "exposition",
            "normalx",
            "normaly",
            "kmin",
            "kmax",
            "kmean",
            "kgauss",
            "kminDir",
            "kmaxDir",
            "absKmaxDir",
            "precision"
          ],
          "items": {
            "type": "string"
          },
          "title": "additional output of feature grid models",
          "type": "array"
        },
        "filter": {
          "description": "A filter string in EBNF syntax as described in section Filter syntax can be passed to restrict the set of input points (e.g. to consider last echoes only).",
          "title": "modify the input using a (tree of) filter(s)",
          "type": "string"
        },
        "gridSize": {
          "default": "1",
          "description": "Size of the rectangular grid cell in x- and y-direction. If only one value is passed, quadratic cells are used.",
          "title": "grid width x/y",
          "type": "number"
        },
        "inFile": {
          "description": "The path(s) to the opals datamanager(s) whose point data are used to derive the surface grid model. In case multiple ODMs are specified, the data are queried from all (potentially overlapping) ODMs.",
          "items": {
            "type": "string"
          },
          "title": "input data manager file name(s)",
          "type": "array"
        },
        "interpolation": {
          "default": "snap",
          "description": "The grid interpolation methods are ordered by quality. Higher-quality surfaces can be achieved using the latter methods but, in turn, the processing performance decreases.",
          "enum": [
            "snap",
            "nearestNeighbour",
            "delaunayTriangulation",
            "movingAverage",
            "movingPlanes",
            "robMovingPlanes",
            "movingParaboloid",
            "kriging"
          ],
          "title": "interpolation method",
          "type": "string"
        },
        "limit": {
          "description": "If no user defined limits are specified or -limit is even skipped, the OPALS Data Manager (ODM) extents are used. Rounding is enabled by default in case the limits are derived from the ODM and can be enforced for user defined limits (keyword: round).",
          "title": "2D clipping window",
          "type": "string"
        },
        "multiBand": {
          "default": 0,
          "description": "When using multiband grid features  will be stored in multiple bands instead of multiple files.Features will be saved in the same order as user input.For example if -feature sigma0 slope then Band1=sigma0 and Band2=slope",
          "title": "if multiband set to true then multiple bands will be used instead of multiple files.",
          "type": "boolean"
        },
        "neighbours": {
          "default": "8",
          "description": "This parameter is only considered for moving average, planes and parabola interpolation.",
          "title": "nr of nearest neighbours used for grid point interpolation",
          "type": "integer"
        },
        "noData": {
          "default": "9999",
          "description": "Value representing an undefined value in the output raster model.",
          "title": "Nodata value",
          "type": "number"
        },
        "oFormat": {
          "description": "Use GDAL driver names like GTiff, AAIGrid, USGSDEM, SCOP... . Estimation rule: The output format is estimated based on the extension of the output file (*.tif->GTiff, *.dem->USGSDEM, *.dtm->SCOP...). ",
          "title": "grid file format [GTiff,AAIGrid,USGSDEM,SCOP...]",
          "type": "string"
        },
        "outFile": {
          "description": "Path of output grid file in GDAL supported format. Estimation rule: The current directory and the name (body) of the input file are used as file name basis. Additionally, the default extension of the output format is appended.",
          "items": {
            "type": "string"
          },
          "title": "output gridfile name(s)",
          "type": "array"
        },
        "searchRadius": {
          "description": "Only points within the given search radius are considered for the interpolation of a single grid post. If the search area contains too few points for successful interpolation, the respective grid point is omitted (void).Estimation rule: searchRadius = 3 * gridSize .",
          "title": "maximum search radius for point selection",
          "type": "number"
        },
        "selMode": {
          "default": "nearest",
          "description": "Please note that quadrant wise data selection on the one hand reduces extrapolation effects, but on the other hand decreases the processing performance",
          "enum": [
            "nearest",
            "quadrant"
          ],
          "title": "data selection mode",
          "type": "string"
        },
        "tileSize": {
          "default": "64",
          "description": "The internal processing is organized in rectangular tiles. The size of these computing units(number of grid lines per tile) can be specified allowing control of the memory consumption of the module. Recommended values are in the range of 64 (default) if the average point distance approximately matches the grid size. In case coarser of finer grids are to be derived, the tile size may need to be adapted. Finer grids allow for larger tile sizes (and vice versa).",
          "title": "tile (block) size",
          "type": "integer"
        },
        "type": {
          "const": "Grid",
          "type": "string"
        },
        "weightFunc": {
          "description": "An algebraic formula in generic filter syntax can be specified to calculate an individual weight for each point. Both, the points attributes and the distance w.r.t the grid location can be used to determine the point weight. Inverse Distance Weighting (IDW) can be realized by using the built-in Dist2D(n[0],n[1]) or SqrDist2D(n[0],n[1]) function returning the linear or squared distance between the current grid location n[0] and the considered neighbour point n[1]. The following predefined formulae can be used :   IDW1.... inverse linear distance  (i.e., 1/(1+ad))   IDW2.... inverse squared distance (i.e., 1/(1+(ad)^2)   IDW:i... inverse distance to the power of i ( i.e., 1/1+(ad)^i) where d denotes the 2D distance between the grid point and the neighbouring data point and a the shape factor of the weight function. a determines how fast the weight function drops to zero with increasing distance from the grid point. It is determined automatically in a way that points located at the border of the search circle (c.f. -searchRadius) obtain a small weight w=0.05.",
          "title": "point weight formula",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "Grid Module (OPALS)",
      "type": "object"
    },
    {
      "additionalProperties": false,
      "properties": {
        "debugOutFile": {
          "description": "Outputs a xyz file containing all points classified as ground",
          "title": "debug ground points file",
          "type": "string"
        },
        "filter": {
          "description": "If a filter string is specified, point classification is only carried out for the set points selected by the filter condition",
          "title": "(tree of )filter(s) to select search points",
          "type": "string"
        },
        "inFile": {
          "description": "The path to the opals datamanager whose point data are being classified",
          "title": "input ODM file",
          "type": "string"
        },
        "interpolation": {
          "default": "plane",
          "description": "The interpolation methods are ordered by their polynomial degree. In case adapting is chosen, a suitable interpolator is determined by the module, Higher degree interpolation is only used, if lower degree surfaces are too rigid.",
          "enum": [
            "plane",
            "paraboloid",
            "adapting"
          ],
          "title": "robust interpolation method",
          "type": "string"
        },
        "maxIter": {
          "default": "100",
          "description": "Robust interpolation is performed iteratively. In each iteration the individual point weights are adapted based on the residuals (i.e. vertical distance between point and intermediate surface. The process of surface interpolation and re-weighting is repeated until the surface changes are below a threshold or the maximum number of iterations is reached.",
          "title": "maximum number of iterations",
          "type": "integer"
        },
        "maxSigma": {
          "default": "0.5",
          "description": "If the standard deviation of a unit observation of the robust interpolation (i.e. sigma_0 ) exceeds the specified value, the classification of the affected points remains unchanged.",
          "title": "maximum allowed sigma of interpolation",
          "type": "number"
        },
        "penetration": {
          "default": "20",
          "description": "The laser signal is partly or totally reflected at semi-transparent objects like vegetation. Therefore, not all laser pulses reach the ground. The penetration rate is used in the course of the robust interpolation for apriori estimating a reasonable initial course of the local surfaces",
          "title": "estimated penetration rate [%]",
          "type": "integer"
        },
        "robustWFAdpation": {
          "default": "adapting",
          "description": "The module supports different adaption functions",
          "title": "adaption of the robust weight function",
          "type": "string"
        },
        "searchRadius": {
          "default": "3",
          "description": "Only points within the given search radius are considered for the local robust interpolation.If the search area contains too few points for successful interpolation, the classification of the respective points remains unchanged.",
          "title": "search radius for point selection",
          "type": "number"
        },
        "sigmaApriori": {
          "default": "0.15",
          "description": "Either a constant accuracy representing all data points or a user-defined formula (using the generic filter syntax) may be applied. It is important thatthe a specified formula provide realistic accuracy values, otherwise therobust interpolation concept will not work properly.",
          "title": "a-priori sigma of points",
          "type": "string"
        },
        "type": {
          "const": "RobFilter",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "RobFilter Module (OPALS)",
      "type": "object"
    }
  ],
  "title": "OPALS Filter"
}
